<?xml version='1.0' encoding='utf-8' ?>

<!-- build 9100.15.0828.1711                                -->
<workbook source-platform='win' version='9.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (top100banks2017-12-31)' inline='true' name='excel-direct.45023.498050682872' version='9.1'>
      <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:\Users\cibi\Downloads\top100banks2017-12-31.xlsx' interpretationMode='0' password='' server='' username='' validate='no'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E121:no:A1:E121' header='yes' outcome='6'>
            <column datatype='integer' name='rank' ordinal='0' />
            <column datatype='string' name='bank' ordinal='1' />
            <column datatype='string' name='country' ordinal='2' />
            <column datatype='real' name='total_assets_us_b' ordinal='3' />
            <column datatype='date' name='balance_sheet' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bank</remote-name>
            <remote-type>130</remote-type>
            <local-name>[bank]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>bank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_assets_us_b</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_assets_us_b]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>total_assets_us_b</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>balance_sheet</remote-name>
            <remote-type>7</remote-type>
            <local-name>[balance_sheet]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>balance_sheet</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E121:no:A1:E121&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Balance Sheet' datatype='date' name='[balance_sheet]' role='dimension' type='ordinal' />
      <column caption='Bank' datatype='string' name='[bank]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
      <column caption='Total Assets Us B' datatype='real' name='[total_assets_us_b]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (top100banks2017-12-31)' name='excel-direct.45023.498050682872' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.45023.498050682872'>
            <column caption='Balance Sheet' datatype='date' name='[balance_sheet]' role='dimension' type='ordinal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[balance_sheet]' derivation='Month' name='[mn:balance_sheet:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[balance_sheet]' derivation='Quarter' name='[qr:balance_sheet:ok]' pivot='key' type='ordinal' />
            <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
            <column-instance column='[rank]' derivation='Sum' name='[sum:rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[balance_sheet]' derivation='Year' name='[yr:balance_sheet:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.45023.498050682872].[none:country:nk]'>
            <groupfilter from='&quot;Austria&quot;' function='range' level='[none:country:nk]' to='&quot;USA&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[excel-direct.45023.498050682872].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' value='#eaf7e1' />
            <format attr='band-color' scope='rows' value='#c3cdeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#f3e6d3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#fbf2e2' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.45023.498050682872].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[excel-direct.45023.498050682872].[none:country:nk]</rows>
        <cols>(([excel-direct.45023.498050682872].[yr:balance_sheet:ok] / ([excel-direct.45023.498050682872].[qr:balance_sheet:ok] / [excel-direct.45023.498050682872].[mn:balance_sheet:ok])) * [excel-direct.45023.498050682872].[sum:rank:qk])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[excel-direct.45023.498050682872].[none:country:nk]' type='color' />
            <card mode='dropdown' param='[excel-direct.45023.498050682872].[none:country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.45023.498050682872].[none:country:nk]</field>
          <field>[excel-direct.45023.498050682872].[yr:balance_sheet:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      PDBKUx9kLAMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
